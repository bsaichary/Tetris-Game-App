trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '0b048684-1a12-4fa1-84af-d139b9337693'
  imageRepository: 'tetrisgameapp'
  containerRegistry: 'tetriswebapp1.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  azureSubscription: '3efcbae4-be1e-4d16-92c4-119f7fd7fa6a'
  appServiceName: 'tetriswebapp'
  resourceGroupName: 'tetrisrg'

pool: 
  name: gandiagent
  demands:  
    - agent.name -equals tetrisappvm

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool: 
      name: gandiagent
      demands:  
        - agent.name -equals tetrisappvm
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: Deploy to Azure App Service
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy
    pool: 
      name: gandiagent
      demands:  
        - agent.name -equals tetrisappvm
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Deploy to Azure App Service'
      inputs:
        azureSubscription: '$(azureSubscription)'
        appName: '$(appServiceName)'
        containers: '$(containerRegistry)/$(imageRepository):latest'
        resourceGroupName: '$(resourceGroupName)'